version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
      - OPENROUTER_MODEL=meta-llama/llama-3.2-90b-text-preview
      - OPENROUTER_TIMEOUT=30
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src/api:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: ./src/worker
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
      - OPENROUTER_MODEL=meta-llama/llama-3.2-90b-text-preview
      - OPENROUTER_TIMEOUT=30
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src/worker:/app
    command: celery -A main worker --loglevel=info

  scheduler:
    build:
      context: ./src/worker
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src/worker:/app
    command: celery -A main beat --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api

volumes:
  redis_data:
